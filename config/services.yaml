# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    targetDirectory: '%kernel.project_dir%/public/uploads/'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\Controller\UserController:
        arguments: ['@validator', '@entitymanager']
    App\Services\RegisterService:
        arguments: 
            $userRepository: '@Component\User\Repository\UserRepository'
            $passwordHasher: '@Component\PasswordHaser\Hasher\UserPasswordHasherinterface'
    App\Services\PostService:
        arguments: 
            $postRepository: '@Component\Post\Repository\PostRepository'
            $tagRepository: '@Component\Post\Repository\TagRepository'
    App\Services\UserService:
        arguments:
            $userRepository: '@Component\User\Repository\UserRepository'
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    acme_api.event.jwt_created_listener:
        class: App\Controller\Api\Listener\JWTCreatedListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
    acme_api.event.jwt_decoded_listener:
        class: App\Controller\Api\Listener\JWTDecodedListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }
            

